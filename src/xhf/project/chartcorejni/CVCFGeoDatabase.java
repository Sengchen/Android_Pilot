/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package xhf.project.chartcorejni;

public class CVCFGeoDatabase {
	private long swigCPtr;
	protected boolean swigCMemOwn;

	protected CVCFGeoDatabase(long cPtr, boolean cMemoryOwn) {
		swigCMemOwn = cMemoryOwn;
		swigCPtr = cPtr;
	}

	protected static long getCPtr(CVCFGeoDatabase obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	protected void finalize() {
		delete();
	}

	public synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				elecchartcoreJNI.delete_CVCFGeoDatabase(swigCPtr);
			}
			swigCPtr = 0;
		}
	}

	public CVCFGeoDatabase() {
		this(elecchartcoreJNI.new_CVCFGeoDatabase(), true);
	}

	public int Create() {
		return elecchartcoreJNI.CVCFGeoDatabase_Create(swigCPtr, this);
	}

	public int Open(String pszFilePath) {
		return elecchartcoreJNI.CVCFGeoDatabase_Open(swigCPtr, this,
				pszFilePath);
	}

	public void Close() {
		elecchartcoreJNI.CVCFGeoDatabase_Close(swigCPtr, this);
	}

	public boolean IsOpen() {
		return elecchartcoreJNI.CVCFGeoDatabase_IsOpen(swigCPtr, this);
	}

	public void GetCoverage(stGEOENVELOPE coverage) {
		elecchartcoreJNI.CVCFGeoDatabase_GetCoverage(swigCPtr, this,
				stGEOENVELOPE.getCPtr(coverage), coverage);
	}

	public int GetOpenGeoDataSetNums() {
		return elecchartcoreJNI.CVCFGeoDatabase_GetOpenGeoDataSetNums(swigCPtr,
				this);
	}

	public CVCFGeoDataSet GetGeoDataSet(int nIndex) {
		long cPtr = elecchartcoreJNI.CVCFGeoDatabase_GetGeoDataSet__SWIG_0(
				swigCPtr, this, nIndex);
		return (cPtr == 0) ? null : new CVCFGeoDataSet(cPtr, false);
	}

	public CVCFGeoDataSet GetGeoDataSet(String pszDataSetName) {
		long cPtr = elecchartcoreJNI.CVCFGeoDatabase_GetGeoDataSet__SWIG_1(
				swigCPtr, this, pszDataSetName);
		return (cPtr == 0) ? null : new CVCFGeoDataSet(cPtr, false);
	}

	public CVCFGeoDataSet OpenManyGeoDataSet(String pszDataSetName) {
		long cPtr = elecchartcoreJNI.CVCFGeoDatabase_OpenManyGeoDataSet(
				swigCPtr, this, pszDataSetName);
		return (cPtr == 0) ? null : new CVCFGeoDataSet(cPtr, false);
	}

	public CVCFGeoDataSet OpenOneGeoDataSet(String pszDataSetName) {
		long cPtr = elecchartcoreJNI.CVCFGeoDatabase_OpenOneGeoDataSet(
				swigCPtr, this, pszDataSetName);
		return (cPtr == 0) ? null : new CVCFGeoDataSet(cPtr, false);
	}

	public boolean CloseGeoDataSet(String pszDataSetName) {
		return elecchartcoreJNI.CVCFGeoDatabase_CloseGeoDataSet(swigCPtr, this,
				pszDataSetName);
	}

	public int QueryGeoDataSets(stGEOENVELOPE coverage, boolean bContain,
			CxhfIntegerSet qIndexSet) {
		return elecchartcoreJNI.CVCFGeoDatabase_QueryGeoDataSets__SWIG_0(
				swigCPtr, this, stGEOENVELOPE.getCPtr(coverage), coverage,
				bContain, CxhfIntegerSet.getCPtr(qIndexSet), qIndexSet);
	}

	public int QueryGeoDataSet(CGeo2DPoint geoPoint, SWIGTYPE_p_int nIndex) {
		return elecchartcoreJNI.CVCFGeoDatabase_QueryGeoDataSet__SWIG_0(
				swigCPtr, this, CGeo2DPoint.getCPtr(geoPoint), geoPoint,
				SWIGTYPE_p_int.getCPtr(nIndex));
	}

	public int QueryGeoDataSets(CGeo2DPoint geoPoint, CxhfIntegerSet qIndexSet) {
		return elecchartcoreJNI.CVCFGeoDatabase_QueryGeoDataSets__SWIG_1(
				swigCPtr, this, CGeo2DPoint.getCPtr(geoPoint), geoPoint,
				CxhfIntegerSet.getCPtr(qIndexSet), qIndexSet);
	}

	public int QueryGeoDataSets(CGeo2DPoint geoPoint,
			stVCFGEODATASETDESCR stDataSetDescr) {
		return elecchartcoreJNI.CVCFGeoDatabase_QueryGeoDataSets__SWIG_2(
				swigCPtr, this, CGeo2DPoint.getCPtr(geoPoint), geoPoint,
				stVCFGEODATASETDESCR.getCPtr(stDataSetDescr), stDataSetDescr);
	}

	public int QueryGeoDataSet(CGeo2DPoint geoPoint, int nViewScale,
			SWIGTYPE_p_int nIndex) {
		return elecchartcoreJNI.CVCFGeoDatabase_QueryGeoDataSet__SWIG_1(
				swigCPtr, this, CGeo2DPoint.getCPtr(geoPoint), geoPoint,
				nViewScale, SWIGTYPE_p_int.getCPtr(nIndex));
	}

	public boolean GeoPointInOpenGeoDataSet(CGeo2DPoint geoPoint) {
		return elecchartcoreJNI.CVCFGeoDatabase_GeoPointInOpenGeoDataSet(
				swigCPtr, this, CGeo2DPoint.getCPtr(geoPoint), geoPoint);
	}

	public int GetGeoDataSetNums() {
		return elecchartcoreJNI.CVCFGeoDatabase_GetGeoDataSetNums(swigCPtr,
				this);
	}

	public stVCFGEODATASETDESCR GetGeoDataSetDescr(int nIndex) {
		long cPtr = elecchartcoreJNI
				.CVCFGeoDatabase_GetGeoDataSetDescr__SWIG_0(swigCPtr, this,
						nIndex);
		return (cPtr == 0) ? null : new stVCFGEODATASETDESCR(cPtr, false);
	}

	public int GetGeoDataSetDescr(int nIndex,
			stVCFGEODATASETDESCR stDataSetDescr) {
		return elecchartcoreJNI.CVCFGeoDatabase_GetGeoDataSetDescr__SWIG_1(
				swigCPtr, this, nIndex,
				stVCFGEODATASETDESCR.getCPtr(stDataSetDescr), stDataSetDescr);
	}

	public void SetGeoDataSetDescr(int nIndex,
			stVCFGEODATASETDESCR stDataSetDescr) {
		elecchartcoreJNI.CVCFGeoDatabase_SetGeoDataSetDescr__SWIG_0(swigCPtr,
				this, nIndex, stVCFGEODATASETDESCR.getCPtr(stDataSetDescr),
				stDataSetDescr);
	}

	public int GetGeoDataSetDescr(String pszDataSetName,
			stVCFGEODATASETDESCR stDataSetDescr) {
		return elecchartcoreJNI.CVCFGeoDatabase_GetGeoDataSetDescr__SWIG_2(
				swigCPtr, this, pszDataSetName,
				stVCFGEODATASETDESCR.getCPtr(stDataSetDescr), stDataSetDescr);
	}

	public void SetGeoDataSetDescr(String pszDataSetName,
			stVCFGEODATASETDESCR stDataSetDescr) {
		elecchartcoreJNI.CVCFGeoDatabase_SetGeoDataSetDescr__SWIG_1(swigCPtr,
				this, pszDataSetName,
				stVCFGEODATASETDESCR.getCPtr(stDataSetDescr), stDataSetDescr);
	}

	public void ClearGeoDataSet() {
		elecchartcoreJNI.CVCFGeoDatabase_ClearGeoDataSet(swigCPtr, this);
	}

	public void ClearGeoDataSetDescr() {
		elecchartcoreJNI.CVCFGeoDatabase_ClearGeoDataSetDescr(swigCPtr, this);
	}

	public boolean ScrPointPickGeoObjects(CPoint ptPoint,
			stGEOOBJPICKINDEX idxInfo,
			SWIGTYPE_p_swgvectorT__stGEOOBJPICKINDEX_t ltPickList) {
		return elecchartcoreJNI.CVCFGeoDatabase_ScrPointPickGeoObjects(
				swigCPtr, this, CPoint.getCPtr(ptPoint), ptPoint,
				stGEOOBJPICKINDEX.getCPtr(idxInfo), idxInfo,
				SWIGTYPE_p_swgvectorT__stGEOOBJPICKINDEX_t.getCPtr(ltPickList));
	}

	public void clrPickGeoObjects() {
		elecchartcoreJNI.CVCFGeoDatabase_clrPickGeoObjects(swigCPtr, this);
	}

	public boolean ManualAddGeoObject(String pszDataSetName,
			CVCFGeoObject pGeoObject) {
		return elecchartcoreJNI.CVCFGeoDatabase_ManualAddGeoObject(swigCPtr,
				this, pszDataSetName, CVCFGeoObject.getCPtr(pGeoObject),
				pGeoObject);
	}

	public boolean ManualUpdGeoObject(stGEOOBJPICKINDEX pkIndex,
			CVCFGeoObject pGeoObject) {
		return elecchartcoreJNI.CVCFGeoDatabase_ManualUpdGeoObject(swigCPtr,
				this, stGEOOBJPICKINDEX.getCPtr(pkIndex), pkIndex,
				CVCFGeoObject.getCPtr(pGeoObject), pGeoObject);
	}

	public boolean ManualDelGeoObject(stGEOOBJPICKINDEX pkIndex) {
		return elecchartcoreJNI.CVCFGeoDatabase_ManualDelGeoObject(swigCPtr,
				this, stGEOOBJPICKINDEX.getCPtr(pkIndex), pkIndex);
	}

	public CVCFGeoObject GetGeoObjectByPickIndex(stGEOOBJPICKINDEX pkIndex) {
		long cPtr = elecchartcoreJNI.CVCFGeoDatabase_GetGeoObjectByPickIndex(
				swigCPtr, this, stGEOOBJPICKINDEX.getCPtr(pkIndex), pkIndex);
		return (cPtr == 0) ? null : new CVCFGeoObject(cPtr, false);
	}

}
