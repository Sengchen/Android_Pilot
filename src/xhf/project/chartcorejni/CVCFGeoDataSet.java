/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package xhf.project.chartcorejni;

public class CVCFGeoDataSet {
	private long swigCPtr;
	protected boolean swigCMemOwn;

	protected CVCFGeoDataSet(long cPtr, boolean cMemoryOwn) {
		swigCMemOwn = cMemoryOwn;
		swigCPtr = cPtr;
	}

	protected static long getCPtr(CVCFGeoDataSet obj) {
		return (obj == null) ? 0 : obj.swigCPtr;
	}

	protected void finalize() {
		delete();
	}

	public synchronized void delete() {
		if (swigCPtr != 0) {
			if (swigCMemOwn) {
				swigCMemOwn = false;
				elecchartcoreJNI.delete_CVCFGeoDataSet(swigCPtr);
			}
			swigCPtr = 0;
		}
	}

	public CVCFGeoDataSet() {
		this(elecchartcoreJNI.new_CVCFGeoDataSet__SWIG_0(), true);
	}

	public CVCFGeoDataSet(SWIGTYPE_p_void pOwner) {
		this(elecchartcoreJNI.new_CVCFGeoDataSet__SWIG_1(SWIGTYPE_p_void
				.getCPtr(pOwner)), true);
	}

	public SWIGTYPE_p_void GetOwner() {
		long cPtr = elecchartcoreJNI.CVCFGeoDataSet_GetOwner(swigCPtr, this);
		return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
	}

	public int OpenVCFDataSet(String pszDataSetName) {
		return elecchartcoreJNI.CVCFGeoDataSet_OpenVCFDataSet(swigCPtr, this,
				pszDataSetName);
	}

	public void ClearGeoObjects() {
		elecchartcoreJNI.CVCFGeoDataSet_ClearGeoObjects(swigCPtr, this);
	}

	public int IsOpen() {
		return elecchartcoreJNI.CVCFGeoDataSet_IsOpen(swigCPtr, this);
	}

	public String GetName() {
		return elecchartcoreJNI.CVCFGeoDataSet_GetName(swigCPtr, this);
	}

	public void AddGeoObjectDirectly(int nGeoLayer, CVCFGeoObject pGeoObject) {
		elecchartcoreJNI.CVCFGeoDataSet_AddGeoObjectDirectly(swigCPtr, this,
				nGeoLayer, CVCFGeoObject.getCPtr(pGeoObject), pGeoObject);
	}

	public int GetGeoObjectNums() {
		return elecchartcoreJNI.CVCFGeoDataSet_GetGeoObjectNums(swigCPtr, this);
	}

	public int GetGeoLayerNums() {
		return elecchartcoreJNI.CVCFGeoDataSet_GetGeoLayerNums(swigCPtr, this);
	}

	public int GetGeoLayerObjectNums(int nGeoLayer) {
		return elecchartcoreJNI.CVCFGeoDataSet_GetGeoLayerObjectNums(swigCPtr,
				this, nGeoLayer);
	}

	public CVCFGeoObject GetGeoObjectByLayer(int nGeoLayer, int i) {
		long cPtr = elecchartcoreJNI.CVCFGeoDataSet_GetGeoObjectByLayer(
				swigCPtr, this, nGeoLayer, i);
		return (cPtr == 0) ? null : new CVCFGeoObject(cPtr, false);
	}

	public CVCFGeoObject GetGeoObjectByFeatureId(int nGeoLayer, int nFeatureId) {
		long cPtr = elecchartcoreJNI.CVCFGeoDataSet_GetGeoObjectByFeatureId(
				swigCPtr, this, nGeoLayer, nFeatureId);
		return (cPtr == 0) ? null : new CVCFGeoObject(cPtr, false);
	}

	public void GetCoverage(stGEOENVELOPE stcoverage) {
		elecchartcoreJNI.CVCFGeoDataSet_GetCoverage(swigCPtr, this,
				stGEOENVELOPE.getCPtr(stcoverage), stcoverage);
	}

	public double GetScale() {
		return elecchartcoreJNI.CVCFGeoDataSet_GetScale(swigCPtr, this);
	}

	public void GetDescription(stVCFGEODATASETDESCR stDataSetDescr) {
		elecchartcoreJNI.CVCFGeoDataSet_GetDescription(swigCPtr, this,
				stVCFGEODATASETDESCR.getCPtr(stDataSetDescr), stDataSetDescr);
	}

	public void SetDescription(stVCFGEODATASETDESCR stDataSetDescr) {
		elecchartcoreJNI.CVCFGeoDataSet_SetDescription(swigCPtr, this,
				stVCFGEODATASETDESCR.getCPtr(stDataSetDescr), stDataSetDescr);
	}

	public boolean isContainGeoPoint(CGeo2DPoint geoPoint) {
		return elecchartcoreJNI.CVCFGeoDataSet_isContainGeoPoint(swigCPtr,
				this, CGeo2DPoint.getCPtr(geoPoint), geoPoint);
	}

	public boolean AddManUpdateGeoObjectDirectly(int nGeoLayer,
			CVCFGeoObject pGeoObject) {
		return elecchartcoreJNI.CVCFGeoDataSet_AddManUpdateGeoObjectDirectly(
				swigCPtr, this, nGeoLayer, CVCFGeoObject.getCPtr(pGeoObject),
				pGeoObject);
	}

	public int GetUpdateGeoObjectNums() {
		return elecchartcoreJNI.CVCFGeoDataSet_GetUpdateGeoObjectNums(swigCPtr,
				this);
	}

	public int GetUpdateGeoLayerNums() {
		return elecchartcoreJNI.CVCFGeoDataSet_GetUpdateGeoLayerNums(swigCPtr,
				this);
	}

	public int GetUpdateGeoLayerObjectNums(int nGeoLayer) {
		return elecchartcoreJNI.CVCFGeoDataSet_GetUpdateGeoLayerObjectNums(
				swigCPtr, this, nGeoLayer);
	}

	public CVCFGeoObject GetUpdateGeoObjectByLayer(int nGeoLayer, int i) {
		long cPtr = elecchartcoreJNI.CVCFGeoDataSet_GetUpdateGeoObjectByLayer(
				swigCPtr, this, nGeoLayer, i);
		return (cPtr == 0) ? null : new CVCFGeoObject(cPtr, false);
	}

	public CVCFGeoObject GetUpdateGeoObjectByFeatureId(int nGeoLayer,
			int nFeatureId) {
		long cPtr = elecchartcoreJNI
				.CVCFGeoDataSet_GetUpdateGeoObjectByFeatureId(swigCPtr, this,
						nGeoLayer, nFeatureId);
		return (cPtr == 0) ? null : new CVCFGeoObject(cPtr, false);
	}

	public CVCFGeoObject GetUpdateGeoObjectAnncovp(String pszAnncLayer,
			int nAnncId) {
		long cPtr = elecchartcoreJNI.CVCFGeoDataSet_GetUpdateGeoObjectAnncovp(
				swigCPtr, this, pszAnncLayer, nAnncId);
		return (cPtr == 0) ? null : new CVCFGeoObject(cPtr, false);
	}

	public boolean ManualAddGeoObject(CVCFGeoObject pGeoObject) {
		return elecchartcoreJNI.CVCFGeoDataSet_ManualAddGeoObject(swigCPtr,
				this, CVCFGeoObject.getCPtr(pGeoObject), pGeoObject);
	}

	public boolean ManualUpdGeoObject(stGEOOBJPICKINDEX pkIndex,
			CVCFGeoObject pGeoObject) {
		return elecchartcoreJNI.CVCFGeoDataSet_ManualUpdGeoObject(swigCPtr,
				this, stGEOOBJPICKINDEX.getCPtr(pkIndex), pkIndex,
				CVCFGeoObject.getCPtr(pGeoObject), pGeoObject);
	}

	public boolean ManualDelGeoObject(stGEOOBJPICKINDEX pkIndex) {
		return elecchartcoreJNI.CVCFGeoDataSet_ManualDelGeoObject(swigCPtr,
				this, stGEOOBJPICKINDEX.getCPtr(pkIndex), pkIndex);
	}

	public boolean PtPointPickGeoObjects(CPoint ptPoint,
			stGEOOBJPICKINDEX idxInfo,
			SWIGTYPE_p_swgvectorT__stGEOOBJPICKINDEX_t ltPickList) {
		return elecchartcoreJNI.CVCFGeoDataSet_PtPointPickGeoObjects(swigCPtr,
				this, CPoint.getCPtr(ptPoint), ptPoint,
				stGEOOBJPICKINDEX.getCPtr(idxInfo), idxInfo,
				SWIGTYPE_p_swgvectorT__stGEOOBJPICKINDEX_t.getCPtr(ltPickList));
	}

	public void clrPickGeoObjects() {
		elecchartcoreJNI.CVCFGeoDataSet_clrPickGeoObjects(swigCPtr, this);
	}

}
