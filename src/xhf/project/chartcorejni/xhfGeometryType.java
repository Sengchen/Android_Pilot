/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.9
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package xhf.project.chartcorejni;

public final class xhfGeometryType {
	public final static xhfGeometryType geobUnknown = new xhfGeometryType(
			"geobUnknown", elecchartcoreJNI.geobUnknown_get());
	public final static xhfGeometryType geoPoint = new xhfGeometryType(
			"geoPoint", elecchartcoreJNI.geoPoint_get());
	public final static xhfGeometryType geoLineString = new xhfGeometryType(
			"geoLineString", elecchartcoreJNI.geoLineString_get());
	public final static xhfGeometryType geoPolyLine = new xhfGeometryType(
			"geoPolyLine", elecchartcoreJNI.geoPolyLine_get());
	public final static xhfGeometryType geoPolygon = new xhfGeometryType(
			"geoPolygon", elecchartcoreJNI.geoPolygon_get());
	public final static xhfGeometryType geoMultiPoint = new xhfGeometryType(
			"geoMultiPoint", elecchartcoreJNI.geoMultiPoint_get());
	public final static xhfGeometryType geoMultiLineString = new xhfGeometryType(
			"geoMultiLineString", elecchartcoreJNI.geoMultiLineString_get());
	public final static xhfGeometryType geoMultiPolygon = new xhfGeometryType(
			"geoMultiPolygon", elecchartcoreJNI.geoMultiPolygon_get());
	public final static xhfGeometryType geoGeometryCollection = new xhfGeometryType(
			"geoGeometryCollection",
			elecchartcoreJNI.geoGeometryCollection_get());
	public final static xhfGeometryType geoNone = new xhfGeometryType(
			"geoNone", elecchartcoreJNI.geoNone_get());
	public final static xhfGeometryType geoLinearRing = new xhfGeometryType(
			"geoLinearRing", elecchartcoreJNI.geoLinearRing_get());
	public final static xhfGeometryType geoPolyLine25D = new xhfGeometryType(
			"geoPolyLine25D", elecchartcoreJNI.geoPolyLine25D_get());
	public final static xhfGeometryType geoPoint25D = new xhfGeometryType(
			"geoPoint25D", elecchartcoreJNI.geoPoint25D_get());
	public final static xhfGeometryType geoLineString25D = new xhfGeometryType(
			"geoLineString25D", elecchartcoreJNI.geoLineString25D_get());
	public final static xhfGeometryType geoPolygon25D = new xhfGeometryType(
			"geoPolygon25D", elecchartcoreJNI.geoPolygon25D_get());
	public final static xhfGeometryType geoMultiPoint25D = new xhfGeometryType(
			"geoMultiPoint25D", elecchartcoreJNI.geoMultiPoint25D_get());
	public final static xhfGeometryType geoMultiLineString25D = new xhfGeometryType(
			"geoMultiLineString25D",
			elecchartcoreJNI.geoMultiLineString25D_get());
	public final static xhfGeometryType geoMultiPolygon25D = new xhfGeometryType(
			"geoMultiPolygon25D", elecchartcoreJNI.geoMultiPolygon25D_get());
	public final static xhfGeometryType geoGeometryCollection25D = new xhfGeometryType(
			"geoGeometryCollection25D",
			elecchartcoreJNI.geoGeometryCollection25D_get());

	public final int swigValue() {
		return swigValue;
	}

	public String toString() {
		return swigName;
	}

	public static xhfGeometryType swigToEnum(int swigValue) {
		if (swigValue < swigValues.length && swigValue >= 0
				&& swigValues[swigValue].swigValue == swigValue)
			return swigValues[swigValue];
		for (int i = 0; i < swigValues.length; i++)
			if (swigValues[i].swigValue == swigValue)
				return swigValues[i];
		throw new IllegalArgumentException("No enum " + xhfGeometryType.class
				+ " with value " + swigValue);
	}

	private xhfGeometryType(String swigName) {
		this.swigName = swigName;
		this.swigValue = swigNext++;
	}

	private xhfGeometryType(String swigName, int swigValue) {
		this.swigName = swigName;
		this.swigValue = swigValue;
		swigNext = swigValue + 1;
	}

	private xhfGeometryType(String swigName, xhfGeometryType swigEnum) {
		this.swigName = swigName;
		this.swigValue = swigEnum.swigValue;
		swigNext = this.swigValue + 1;
	}

	private static xhfGeometryType[] swigValues = { geobUnknown, geoPoint,
			geoLineString, geoPolyLine, geoPolygon, geoMultiPoint,
			geoMultiLineString, geoMultiPolygon, geoGeometryCollection,
			geoNone, geoLinearRing, geoPolyLine25D, geoPoint25D,
			geoLineString25D, geoPolygon25D, geoMultiPoint25D,
			geoMultiLineString25D, geoMultiPolygon25D, geoGeometryCollection25D };
	private static int swigNext = 0;
	private final int swigValue;
	private final String swigName;
}
