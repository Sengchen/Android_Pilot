android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    void bumpBackStackNesting(int) -> a
    int commit() -> a
    int commitInternal(boolean) -> a
    void run() -> run
    void popFromBackStack(boolean) -> b
    java.lang.String getName() -> b
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.BackStackState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> P
    int mState -> a
    android.view.View mAnimatingAway -> b
    int mStateAfterAnimating -> c
    android.os.Bundle mSavedFragmentState -> d
    android.util.SparseArray mSavedViewState -> e
    int mIndex -> f
    java.lang.String mWho -> g
    android.os.Bundle mArguments -> h
    android.support.v4.app.Fragment mTarget -> i
    int mTargetIndex -> j
    int mTargetRequestCode -> k
    boolean mAdded -> l
    boolean mRemoving -> m
    boolean mResumed -> n
    boolean mFromLayout -> o
    boolean mInLayout -> p
    boolean mRestored -> q
    int mBackStackNesting -> r
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> s
    android.support.v4.app.FragmentActivity mActivity -> t
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> u
    android.support.v4.app.Fragment mParentFragment -> v
    int mFragmentId -> w
    int mContainerId -> x
    java.lang.String mTag -> y
    boolean mHidden -> z
    boolean mDetached -> A
    boolean mRetainInstance -> B
    boolean mRetaining -> C
    boolean mHasMenu -> D
    boolean mMenuVisible -> E
    boolean mCalled -> F
    int mNextAnim -> G
    android.view.ViewGroup mContainer -> H
    android.view.View mView -> I
    android.view.View mInnerView -> J
    boolean mDeferStart -> K
    boolean mUserVisibleHint -> L
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> M
    boolean mLoadersStarted -> N
    boolean mCheckedForLoaderManager -> O
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> a
    android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> a
    void restoreViewState(android.os.Bundle) -> a
    void setIndex(int,android.support.v4.app.Fragment) -> a
    boolean isInBackStack() -> a
    boolean equals(java.lang.Object) -> equals
    int hashCode() -> hashCode
    java.lang.String toString() -> toString
    android.support.v4.app.FragmentActivity getActivity() -> b
    android.content.res.Resources getResources() -> c
    boolean isDetached() -> d
    void onHiddenChanged(boolean) -> a
    void onActivityResult(int,int,android.content.Intent) -> a
    android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> b
    void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> a
    void onAttach(android.app.Activity) -> a
    android.view.animation.Animation onCreateAnimation(int,boolean,int) -> a
    void onCreate(android.os.Bundle) -> c
    android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> a
    void onViewCreated(android.view.View,android.os.Bundle) -> a
    void onActivityCreated(android.os.Bundle) -> d
    void onViewStateRestored(android.os.Bundle) -> e
    void onStart() -> e
    void onResume() -> f
    void onSaveInstanceState(android.os.Bundle) -> f
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onPause() -> g
    void onStop() -> h
    void onLowMemory() -> onLowMemory
    void onDestroyView() -> i
    void onDestroy() -> j
    void initState() -> k
    void onDetach() -> l
    void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    void onPrepareOptionsMenu(android.view.Menu) -> a
    void onDestroyOptionsMenu() -> m
    boolean onOptionsItemSelected(android.view.MenuItem) -> a
    void onOptionsMenuClosed(android.view.Menu) -> b
    void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    boolean onContextItemSelected(android.view.MenuItem) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    void instantiateChildFragmentManager() -> n
    void performCreate(android.os.Bundle) -> g
    android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> b
    void performActivityCreated(android.os.Bundle) -> h
    void performStart() -> o
    void performResume() -> p
    void performConfigurationChanged(android.content.res.Configuration) -> a
    void performLowMemory() -> q
    boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> b
    boolean performPrepareOptionsMenu(android.view.Menu) -> c
    boolean performOptionsItemSelected(android.view.MenuItem) -> c
    boolean performContextItemSelected(android.view.MenuItem) -> d
    void performOptionsMenuClosed(android.view.Menu) -> d
    void performSaveInstanceState(android.os.Bundle) -> i
    void performPause() -> r
    void performStop() -> s
    void performReallyStop() -> t
    void performDestroyView() -> u
    void performDestroy() -> v
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.h:
    android.os.Handler mHandler -> a
    android.support.v4.app.FragmentManagerImpl mFragments -> b
    android.support.v4.app.FragmentContainer mContainer -> c
    boolean mCreated -> d
    boolean mResumed -> e
    boolean mStopped -> f
    boolean mReallyStopped -> g
    boolean mRetaining -> h
    boolean mOptionsMenuInvalidated -> i
    boolean mCheckedForLoaderManager -> j
    boolean mLoadersStarted -> k
    java.util.HashMap mAllLoaderManagers -> l
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> m
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onBackPressed() -> onBackPressed
    void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    void onDestroy() -> onDestroy
    boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    void onLowMemory() -> onLowMemory
    boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    void onPause() -> onPause
    void onNewIntent(android.content.Intent) -> onNewIntent
    void onResume() -> onResume
    void onPostResume() -> onPostResume
    void onResumeFragments() -> a
    boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    void onStart() -> onStart
    void onStop() -> onStop
    java.lang.Object onRetainCustomNonConfigurationInstance() -> b
    void supportInvalidateOptionsMenu() -> c
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    java.lang.String viewToString(android.view.View) -> a
    void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> a
    void doReallyStop(boolean) -> a
    void onReallyStop() -> d
    void onAttachFragment(android.support.v4.app.Fragment) -> a
    void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    void invalidateSupportFragment(java.lang.String) -> a
    android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.i:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.j:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.k:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.l:
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.m:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.n:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    void throwException(java.lang.RuntimeException) -> a
    android.support.v4.app.FragmentTransaction beginTransaction() -> a
    boolean executePendingTransactions() -> b
    boolean popBackStackImmediate() -> c
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    void moveToState(android.support.v4.app.Fragment) -> b
    void moveToState(int,boolean) -> a
    void moveToState(int,int,int,boolean) -> a
    void startPendingDeferredFragments() -> d
    void makeActive(android.support.v4.app.Fragment) -> c
    void makeInactive(android.support.v4.app.Fragment) -> d
    void addFragment(android.support.v4.app.Fragment,boolean) -> a
    void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    void showFragment(android.support.v4.app.Fragment,int,int) -> c
    void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    android.support.v4.app.Fragment findFragmentById(int) -> a
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> a
    void checkStateLoss() -> t
    void enqueueAction(java.lang.Runnable,boolean) -> a
    int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    void freeBackStackIndex(int) -> b
    boolean execPendingActions() -> e
    void reportBackStackChanged() -> f
    void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    java.util.ArrayList retainNonConfig() -> g
    void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    android.os.Parcelable saveAllState() -> h
    void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    void noteStateNotSaved() -> i
    void dispatchCreate() -> j
    void dispatchActivityCreated() -> k
    void dispatchStart() -> l
    void dispatchResume() -> m
    void dispatchPause() -> n
    void dispatchStop() -> o
    void dispatchReallyStop() -> p
    void dispatchDestroyView() -> q
    void dispatchDestroy() -> r
    void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    void dispatchLowMemory() -> s
    boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    void dispatchOptionsMenuClosed(android.view.Menu) -> b
    int reverseTransit(int) -> c
    int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.o:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.p:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    int describeContents() -> describeContents
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.r:
    android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.content.Context mContext -> b
    android.support.v4.app.FragmentManager mFragmentManager -> c
    int mContainerId -> d
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> e
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> f
    boolean mAttached -> g
    void setup() -> setup
    void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    void onAttachedToWindow() -> onAttachedToWindow
    void onDetachedFromWindow() -> onDetachedFromWindow
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void onTabChanged(java.lang.String) -> onTabChanged
    android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.s:
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.t:
    android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    java.lang.Object[] newArray(int) -> newArray
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.u:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.v:
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> a
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> a
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> b
    int commit() -> a
android.support.v4.app.LoaderManager -> android.support.v4.app.w:
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.x:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.y:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    void updateActivity(android.support.v4.app.FragmentActivity) -> a
    void doStart() -> b
    void doStop() -> c
    void doRetain() -> d
    void finishRetain() -> e
    void doReportNextStart() -> f
    void doReportStart() -> g
    void doDestroy() -> h
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.z:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    void start() -> a
    void retain() -> b
    void finishRetain() -> c
    void reportStart() -> d
    void stop() -> e
    void destroy() -> f
    void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.aa:
    android.view.ViewGroup wrap(android.view.View) -> a
    void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.ab:
android.support.v4.content.Loader -> android.support.v4.a.a:
    int mId -> a
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> b
    boolean mStarted -> c
    boolean mAbandoned -> d
    boolean mReset -> e
    boolean mContentChanged -> f
    void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> a
    void startLoading() -> a
    void onStartLoading() -> b
    void stopLoading() -> c
    void onStopLoading() -> d
    void reset() -> e
    void onReset() -> f
    java.lang.String dataToString(java.lang.Object) -> a
    java.lang.String toString() -> toString
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.b:
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    void close() -> close
    void flush() -> flush
    void write(char[],int,int) -> write
    void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    void gc() -> c
    int size() -> a
    int keyAt(int) -> a
    java.lang.Object valueAt(int) -> b
    void clear() -> b
    int idealByteArraySize(int) -> c
    int idealIntArraySize(int) -> d
android.support.v4.view.KeyEventCompat -> android.support.v4.view.a:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    boolean hasModifiers(android.view.KeyEvent,int) -> a
    boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.b:
    int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.c:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.d:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.e:
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> a
android.support.v4.view.MotionEventCompat -> android.support.v4.view.f:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    int getActionIndex(android.view.MotionEvent) -> a
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.g:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.h:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.i:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.j:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
android.support.v4.view.PagerAdapter -> android.support.v4.view.k:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    void startUpdate(android.view.ViewGroup) -> a
    java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    void finishUpdate(android.view.ViewGroup) -> b
    void startUpdate(android.view.View) -> a
    java.lang.Object instantiateItem(android.view.View,int) -> a
    void destroyItem(android.view.View,int,java.lang.Object) -> a
    void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    android.os.Parcelable saveState() -> b
    void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    int getItemPosition(java.lang.Object) -> a
    void registerDataSetObserver(android.database.DataSetObserver) -> a
    void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    float getPageWidth(int) -> a
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.l:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.m:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.n:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.o:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.p:
    float getXVelocity(android.view.VelocityTracker,int) -> a
android.support.v4.view.ViewCompat -> android.support.v4.view.q:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.r:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.s:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.t:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.u:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.v:
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.w:
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.x:
    boolean canScrollHorizontally(android.view.View,int) -> a
    int getOverScrollMode(android.view.View) -> a
    void postInvalidateOnAnimation(android.view.View) -> b
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.y:
    int getOverScrollMode(android.view.View) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.z:
    long getFrameTime() -> a
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aa:
    boolean canScrollHorizontally(android.view.View,int) -> a
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ab:
    void postInvalidateOnAnimation(android.view.View) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mLastMotionX -> E
    float mLastMotionY -> F
    float mInitialMotionX -> G
    float mInitialMotionY -> H
    int mActivePointerId -> I
    android.view.VelocityTracker mVelocityTracker -> J
    int mMinimumVelocity -> K
    int mMaximumVelocity -> L
    int mFlingDistance -> M
    int mCloseEnough -> N
    boolean mFakeDragging -> O
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> P
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> Q
    boolean mFirstLayout -> R
    boolean mNeedCalculatePageOffsets -> S
    boolean mCalledSuper -> T
    int mDecorChildCount -> U
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> V
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> W
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> Z
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> aa
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ab
    int mDrawingOrder -> ac
    java.util.ArrayList mDrawingOrderedChildren -> ad
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ae
    java.lang.Runnable mEndScrollRunnable -> af
    int mScrollState -> ag
    void onDetachedFromWindow() -> onDetachedFromWindow
    void setScrollState(int) -> setScrollState
    void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    void removeNonDecorViews() -> f
    android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    void setCurrentItem(int) -> setCurrentItem
    void setCurrentItem(int,boolean) -> a
    int getCurrentItem() -> getCurrentItem
    void setCurrentItemInternal(int,boolean,boolean) -> a
    void setCurrentItemInternal(int,boolean,boolean,int) -> a
    void scrollToItem(int,boolean,int,boolean) -> a
    void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    int getOffscreenPageLimit() -> getOffscreenPageLimit
    void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    void setPageMargin(int) -> setPageMargin
    int getPageMargin() -> getPageMargin
    void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    void setPageMarginDrawable(int) -> setPageMarginDrawable
    boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    void drawableStateChanged() -> drawableStateChanged
    float distanceInfluenceForSnapDuration(float) -> a
    void smoothScrollTo(int,int,int) -> a
    android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    void dataSetChanged() -> a
    void populate() -> b
    void populate(int) -> a
    void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    void removeView(android.view.View) -> removeView
    android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    void onAttachedToWindow() -> onAttachedToWindow
    void onMeasure(int,int) -> onMeasure
    void onSizeChanged(int,int,int,int) -> onSizeChanged
    void recomputeScrollPosition(int,int,int,int) -> a
    void onLayout(boolean,int,int,int,int) -> onLayout
    void computeScroll() -> computeScroll
    boolean pageScrolled(int) -> d
    void onPageScrolled(int,float,int) -> a
    void completeScroll(boolean) -> a
    boolean isGutterDrag(float,float) -> a
    void enableLayers(boolean) -> b
    boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    boolean performDrag(float) -> b
    android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> g
    int determineTargetPage(int,float,int,int) -> a
    void draw(android.graphics.Canvas) -> draw
    void onDraw(android.graphics.Canvas) -> onDraw
    void onSecondaryPointerUp(android.view.MotionEvent) -> a
    void endDrag() -> h
    void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    boolean canScroll(android.view.View,boolean,int,int,int) -> a
    boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    boolean executeKeyEvent(android.view.KeyEvent) -> a
    boolean arrowScroll(int) -> c
    android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    boolean pageLeft() -> c
    boolean pageRight() -> d
    void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    void addTouchables(java.util.ArrayList) -> addTouchables
    boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    int[] access$400() -> e
android.support.v4.view.ViewPager$1 -> android.support.v4.view.ac:
    int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.ad:
    float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.ae:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.af:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ag:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.ah:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.ai:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.aj:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.ak:
    android.support.v4.view.ViewPager this$0 -> a
    void onChanged() -> onChanged
    void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    void writeToParcel(android.os.Parcel,int) -> writeToParcel
    java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.al:
    android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    java.lang.Object[] newArray(int) -> a
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.am:
    int compare(android.view.View,android.view.View) -> a
    int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    void setSize(int,int) -> a
    boolean isFinished() -> a
    void finish() -> b
    boolean onPull(float) -> a
    boolean onRelease() -> c
    boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
xhf.project.ardshippilotsys.AisTargetListDlg -> xhf.project.ardshippilotsys.a:
    int m_layout -> c
    int m_nLeftX -> d
    int m_nTopY -> e
    java.util.List m_lstFileList -> a
    android.widget.ListView m_ctllistView -> b
    void CreateAisTargetInfoList() -> a
xhf.project.ardshippilotsys.AisTargetListDlg$1 -> xhf.project.ardshippilotsys.b:
    xhf.project.ardshippilotsys.AisTargetListDlg this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
xhf.project.ardshippilotsys.AisTargetListDlg$2 -> xhf.project.ardshippilotsys.c:
    xhf.project.ardshippilotsys.AisTargetListDlg this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.COPToolbarView -> xhf.project.ardshippilotsys.COPToolbarView:
    xhf.project.ardshippilotsys.PilotSysMainActivity m_parentActive -> a
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
xhf.project.ardshippilotsys.COpenPlanRouteDlg -> xhf.project.ardshippilotsys.d:
xhf.project.ardshippilotsys.CRouteMenuDlg -> xhf.project.ardshippilotsys.e:
xhf.project.ardshippilotsys.CTopDataBarView -> xhf.project.ardshippilotsys.CTopDataBarView:
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
xhf.project.ardshippilotsys.ChartDisplayDlg -> xhf.project.ardshippilotsys.f:
xhf.project.ardshippilotsys.ChartFileSelectDlg -> xhf.project.ardshippilotsys.g:
xhf.project.ardshippilotsys.ChartMenuDlg -> xhf.project.ardshippilotsys.h:
xhf.project.ardshippilotsys.PilotDataMenuDlg -> xhf.project.ardshippilotsys.i:
xhf.project.ardshippilotsys.PilotSysMainActivity -> xhf.project.ardshippilotsys.PilotSysMainActivity:
    xhf.project.chartcore.ChartCoreView m_ChartCoreView -> a
    xhf.project.ardshippilotsys.COPToolbarView m_OPToolbarView -> b
    android.widget.Button m_ChartOpBtn -> c
    android.widget.Button m_ZoominOpBtn -> d
    android.widget.Button m_ZoomoutOpBtn -> e
    android.widget.Button m_MeasureOpBtn -> f
    android.widget.Button m_ShipcenOpBtn -> g
    android.widget.Button m_AisOpBtn -> h
    android.widget.Button m_RouteOpBtn -> i
    android.widget.Button m_SyssetOpBtn -> j
    android.widget.Button m_ExitSysOpBtn -> k
    android.widget.PopupMenu m_ChartMenu -> l
    android.widget.PopupMenu m_SensorMenu -> m
    android.widget.PopupMenu m_PilotDataMenu -> n
    android.widget.PopupMenu m_RouteMenu -> o
    android.widget.TextView m_textLogo -> p
    android.widget.TextView m_textposState -> q
    android.widget.TextView m_textConnState -> r
    android.widget.TextView m_shiptimeText -> s
    android.widget.TextView m_shiplattext -> t
    android.widget.TextView m_shiplongtext -> u
    android.widget.TextView m_shipcoursetext -> v
    android.widget.TextView m_shipspeedtext -> w
    android.widget.TextView m_shipheadtext -> x
    android.widget.TextView m_shipxtetext -> y
    android.widget.TextView m_shiptimelabel -> z
    android.widget.TextView m_shiplatlabel -> A
    android.widget.TextView m_shiplonglabel -> B
    android.widget.TextView m_shipcourselabel -> C
    android.widget.TextView m_shipspeedlabel -> D
    android.widget.TextView m_shipheadlabel -> E
    android.widget.TextView m_shipxtelabel -> F
    android.view.View m_pilotdataview -> G
    android.view.View m_topbarview -> H
    android.widget.TextView m_tbarConnState -> I
    android.widget.TextView m_tbartimeText -> J
    android.widget.TextView m_tbarcoursetext -> K
    android.widget.TextView m_tbarspeedtext -> L
    android.widget.TextView m_tbarxtetext -> M
    xhf.project.ardshippilotsys.CTopDataBarView m_TopDataBarView -> N
    android.widget.Button m_drawrouteBtn -> O
    android.widget.Button m_delrouteBtn -> P
    android.widget.Button m_updaterouteBtn -> Q
    android.widget.Button m_saverouteBtn -> R
    android.widget.Button m_openrouteBtn -> S
    android.widget.Button m_exitrouteBtn -> T
    java.util.Timer m_mTimer -> af
    java.util.TimerTask m_mTimerTask -> ag
    android.os.Handler m_mTimerHandler -> ah
    xhf.project.ardshippilotsys.ChartFileSelectDlg m_ChartFileSelectDlg -> U
    xhf.project.ardshippilotsys.ChartDisplayDlg m_ChartDisplayDlg -> V
    xhf.project.ardshippilotsys.ChartMenuDlg m_ChartMenuDlg -> W
    xhf.project.ardshippilotsys.SysSettingMenuDlg m_SysSettingMenuDlg -> X
    xhf.project.ardshippilotsys.PilotDataMenuDlg m_PilotDataMenuDlg -> Y
    xhf.project.ardshippilotsys.CRouteMenuDlg m_RouteMenuDlg -> Z
    boolean m_bOwnShipDataDlgShow -> ai
    boolean m_bRouteEditDlgShow -> aj
    xhf.project.ardshippilotsys.AisTargetListDlg m_AisTargetListDlg -> aa
    xhf.project.ardshippilotsys.ShipParamterSetDlg m_ShipParamterSetDlg -> ab
    xhf.project.ardshippilotsys.SocketConfigDlg m_SocketConfigDlg -> ac
    xhf.project.ardshippilotsys.COpenPlanRouteDlg m_OpenPlanRouteDlg -> ad
    xhf.project.sensorctl.CPilotSensorControl m_PilotSensorControl -> ae
    android.view.View$OnClickListener chartOpBtnFunc -> ak
    android.view.View$OnClickListener ZoominOpBtnFunc -> al
    android.view.View$OnClickListener ZoomoutOpBtnFunc -> am
    android.view.View$OnClickListener MeasureOpBtnFunc -> an
    android.view.View$OnClickListener ShipCenOpBtnFunc -> ao
    android.view.View$OnClickListener AisOpBtnFunc -> ap
    android.view.View$OnClickListener RouteOpBtnFunc -> aq
    android.view.View$OnClickListener SysSetOpBtnFunc -> ar
    android.view.View$OnClickListener ExitSysOpBtnFunc -> as
    android.view.View$OnClickListener drawRouteBtnFunc -> at
    android.view.View$OnClickListener delrouteBtnFunc -> au
    android.view.View$OnClickListener updaterouteBtnFunc -> av
    android.view.View$OnClickListener saverouteBtnFunc -> aw
    android.view.View$OnClickListener openrouteBtnFunc -> ax
    android.view.View$OnClickListener closerouteBtnFunc -> ay
    void onCreate(android.os.Bundle) -> onCreate
    boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    void CreateTimerTack() -> a
    void CreateChartMenu() -> o
    void CreateSensorMenu() -> p
    void CreatePilotDataMenu() -> q
    void CreateRouteMenu() -> r
    void OpenChartFileDlg() -> b
    void OpenChartDisplayDlg() -> c
    void OpenOwnShipDataShowDlg() -> d
    void OpenAisTargetListList() -> e
    void OpenShipParamSetDlg() -> f
    void OpenSocketConfigDlg() -> g
    void OpenRouteEditDlg() -> h
    void OpenBluetoothSettingWin() -> i
    void OpenRouteSaveDlg() -> j
    void OpenPlanRouteDlg() -> k
    void TransferRouteDlg() -> l
    void ensureDiscoverable() -> s
    void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    void onStart() -> onStart
    void onResume() -> onResume
    void onPause() -> onPause
    void onStop() -> onStop
    void onDestroy() -> onDestroy
    void onRestart() -> onRestart
    void PilotShipDataWinRTimeShow() -> m
    void systemTimeRTimeShow() -> n
    void access$0(xhf.project.ardshippilotsys.PilotSysMainActivity) -> a
    void access$1(xhf.project.ardshippilotsys.PilotSysMainActivity) -> b
    void access$2(xhf.project.ardshippilotsys.PilotSysMainActivity) -> c
    void access$3(xhf.project.ardshippilotsys.PilotSysMainActivity) -> d
    java.util.Timer access$4(xhf.project.ardshippilotsys.PilotSysMainActivity) -> e
    android.os.Handler access$5(xhf.project.ardshippilotsys.PilotSysMainActivity) -> f
xhf.project.ardshippilotsys.PilotSysMainActivity$1 -> xhf.project.ardshippilotsys.j:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$10 -> xhf.project.ardshippilotsys.k:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$11 -> xhf.project.ardshippilotsys.l:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$12 -> xhf.project.ardshippilotsys.m:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$13 -> xhf.project.ardshippilotsys.n:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$14 -> xhf.project.ardshippilotsys.o:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$15 -> xhf.project.ardshippilotsys.p:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$16 -> xhf.project.ardshippilotsys.q:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
xhf.project.ardshippilotsys.PilotSysMainActivity$17 -> xhf.project.ardshippilotsys.r:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void run() -> run
xhf.project.ardshippilotsys.PilotSysMainActivity$18 -> xhf.project.ardshippilotsys.s:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
xhf.project.ardshippilotsys.PilotSysMainActivity$19 -> xhf.project.ardshippilotsys.t:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
xhf.project.ardshippilotsys.PilotSysMainActivity$2 -> xhf.project.ardshippilotsys.u:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$20 -> xhf.project.ardshippilotsys.v:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
xhf.project.ardshippilotsys.PilotSysMainActivity$21 -> xhf.project.ardshippilotsys.w:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
xhf.project.ardshippilotsys.PilotSysMainActivity$22 -> xhf.project.ardshippilotsys.x:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    java.util.List val$lstFileList -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
xhf.project.ardshippilotsys.PilotSysMainActivity$23 -> xhf.project.ardshippilotsys.y:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$24 -> xhf.project.ardshippilotsys.z:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$25 -> xhf.project.ardshippilotsys.aa:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    android.view.View val$view -> b
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
xhf.project.ardshippilotsys.PilotSysMainActivity$26 -> xhf.project.ardshippilotsys.ab:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    android.view.View val$view -> b
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
xhf.project.ardshippilotsys.PilotSysMainActivity$27 -> xhf.project.ardshippilotsys.ac:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    android.view.View val$view -> b
    void onCheckedChanged(android.widget.RadioGroup,int) -> onCheckedChanged
xhf.project.ardshippilotsys.PilotSysMainActivity$28 -> xhf.project.ardshippilotsys.ad:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$29 -> xhf.project.ardshippilotsys.ae:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    android.view.View val$view -> b
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$3 -> xhf.project.ardshippilotsys.af:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$30 -> xhf.project.ardshippilotsys.ag:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$31 -> xhf.project.ardshippilotsys.ah:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    xhf.project.sensorctl.CSockCommConfig val$msockdata -> b
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$32 -> xhf.project.ardshippilotsys.ai:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    android.view.View val$view -> b
    xhf.project.sensorctl.CSockCommConfig val$msockdata -> c
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$33 -> xhf.project.ardshippilotsys.aj:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$34 -> xhf.project.ardshippilotsys.ak:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    android.widget.EditText val$txtName -> b
    android.widget.EditText val$txtUse -> c
    android.widget.EditText val$txtSaying -> d
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$35 -> xhf.project.ardshippilotsys.al:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$36 -> xhf.project.ardshippilotsys.am:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    java.util.List val$lstFileList -> b
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
xhf.project.ardshippilotsys.PilotSysMainActivity$37 -> xhf.project.ardshippilotsys.an:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$38 -> xhf.project.ardshippilotsys.ao:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    java.util.List val$lstFileList -> b
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$39 -> xhf.project.ardshippilotsys.ap:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$4 -> xhf.project.ardshippilotsys.aq:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$40 -> xhf.project.ardshippilotsys.ar:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    java.lang.String[] val$strroutes -> b
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$41 -> xhf.project.ardshippilotsys.as:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.content.DialogInterface,int) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$5 -> xhf.project.ardshippilotsys.at:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$6 -> xhf.project.ardshippilotsys.au:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$7 -> xhf.project.ardshippilotsys.av:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$8 -> xhf.project.ardshippilotsys.aw:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.PilotSysMainActivity$9 -> xhf.project.ardshippilotsys.ax:
    xhf.project.ardshippilotsys.PilotSysMainActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.ardshippilotsys.ShipParamterSetDlg -> xhf.project.ardshippilotsys.ay:
xhf.project.ardshippilotsys.SocketConfigDlg -> xhf.project.ardshippilotsys.az:
xhf.project.ardshippilotsys.SysSettingMenuDlg -> xhf.project.ardshippilotsys.ba:
xhf.project.chartcore.CGeoCanvasJv -> xhf.project.chartcore.a:
    android.graphics.Path a -> b
    android.graphics.Paint b -> c
    android.graphics.Paint c -> d
    android.graphics.Paint d -> e
    android.graphics.Paint e -> f
    android.graphics.Paint f -> g
    android.graphics.Canvas g -> h
    android.graphics.Canvas h -> i
    android.graphics.Bitmap i -> j
    android.graphics.Bitmap j -> k
    xhf.project.chartcore.ChartCoreView k -> l
    android.graphics.Typeface l -> m
    android.graphics.Typeface m -> n
    android.graphics.Typeface n -> o
    android.graphics.Typeface o -> p
    android.graphics.Rect p -> q
    void Init(android.graphics.Rect,double,android.content.Context) -> a
    void ShowCanvas(android.graphics.Canvas) -> a
xhf.project.chartcore.CTDPilotPresentation -> xhf.project.chartcore.b:
    double a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    double f -> f
    boolean g -> g
    boolean h -> h
    boolean i -> i
    boolean j -> j
    boolean k -> k
    xhf.project.chartcorejni.stDPOINT l -> l
    xhf.project.chartcorejni.CPoint m -> m
    xhf.project.chartcorejni.CPoint n -> n
    xhf.project.chartcorejni.CPoint[] o -> o
    xhf.project.chartcorejni.CPoint p -> p
    xhf.project.chartcorejni.CPoint[] q -> q
    xhf.project.chartcorejni.CPoint[] r -> r
    xhf.project.chartcorejni.CPoint s -> s
    xhf.project.chartcorejni.CPoint t -> t
    android.graphics.PathEffect u -> u
    android.graphics.Paint v -> v
    android.graphics.Paint w -> w
    android.graphics.Path x -> x
    android.graphics.Paint y -> y
    void DrawWKPlanRouteScr(xhf.project.routemanage.CPlanRouteManage,android.graphics.Canvas) -> a
    void xhfDynaTargetPresFlushTimer(xhf.project.dynamictarget.CDynamicTargetControl,xhf.project.chartcorejni.CHfVCFElectronicChart) -> a
xhf.project.chartcore.ChartCoreView -> xhf.project.chartcore.ChartCoreView:
    xhf.project.chartcore.CGeoCanvasJv a -> f
    android.content.Context b -> g
    java.lang.String c -> h
    android.view.GestureDetector d -> i
    float e -> j
    android.graphics.Point f -> k
    android.graphics.Point g -> l
    float h -> m
    float i -> n
    float j -> o
    android.graphics.Paint k -> p
    android.graphics.Paint l -> q
    xhf.project.chartcorejni.CHfVCFElectronicChart m_chartCore -> a
    xhf.project.dynamictarget.CDynamicTargetControl m_dynaTargetControl -> b
    xhf.project.chartcore.CTDPilotPresentation m_pilotPresentation -> c
    xhf.project.datamanage.CPilotDataManage m_pilotDataManage -> d
    xhf.project.routemanage.CPlanRouteManage m_planRouteManage -> e
    android.view.View$OnTouchListener m -> r
    void setSystemDirectory() -> a
    void CopyAssetsGeoDatabaseFile() -> b
    void CopyAssetsPreslibraryFile() -> c
    void CopyAssetsSystemConfigFile() -> d
    void CopyAssetsPilotDatabaseFile() -> e
    void CopyAssetsPlanRouteLibFile() -> f
    java.lang.String GetSystemDataFileDirectory() -> g
    void onDraw(android.graphics.Canvas) -> onDraw
    boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    void ChartZoomin() -> h
    void ChartZoomout() -> i
    void ChartMeasure() -> j
    void DynaTargetShowTimerFlush() -> k
    boolean PilotShipDataChangeUpdate() -> l
    boolean AisTargetDataChangeUpdate() -> m
    void a(xhf.project.chartcore.ChartCoreView,float) -> a
    android.graphics.Point a(xhf.project.chartcore.ChartCoreView) -> a
    android.graphics.Point b(xhf.project.chartcore.ChartCoreView) -> b
    float c(xhf.project.chartcore.ChartCoreView) -> c
    void b(xhf.project.chartcore.ChartCoreView,float) -> b
    void c(xhf.project.chartcore.ChartCoreView,float) -> c
    void d(xhf.project.chartcore.ChartCoreView,float) -> d
    float d(xhf.project.chartcore.ChartCoreView) -> d
    float e(xhf.project.chartcore.ChartCoreView) -> e
    float f(xhf.project.chartcore.ChartCoreView) -> f
    android.view.GestureDetector g(xhf.project.chartcore.ChartCoreView) -> g
xhf.project.chartcore.ChartCoreView$1 -> xhf.project.chartcore.c:
    xhf.project.chartcore.ChartCoreView a -> a
    boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
xhf.project.chartcore.ChartCoreView$MyGestureDetector -> xhf.project.chartcore.d:
    boolean onSingleTapUp(android.view.MotionEvent) -> onSingleTapUp
    boolean onSingleTapConfirmed(android.view.MotionEvent) -> onSingleTapConfirmed
    void onShowPress(android.view.MotionEvent) -> onShowPress
    void onLongPress(android.view.MotionEvent) -> onLongPress
    boolean onDown(android.view.MotionEvent) -> onDown
    boolean onDoubleTap(android.view.MotionEvent) -> onDoubleTap
    boolean onDoubleTapEvent(android.view.MotionEvent) -> onDoubleTapEvent
    boolean onScroll(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onScroll
    boolean onFling(android.view.MotionEvent,android.view.MotionEvent,float,float) -> onFling
xhf.project.chartcorejni.CHfSensorDataFlow -> xhf.project.chartcorejni.a:
    long swigCPtr -> b
    boolean swigCMemOwn -> a
    void finalize() -> finalize
    void delete() -> a
    void InitSensorDataFlow(int) -> a
    void SensorRecevDataFlowMsg(java.lang.String,int) -> a
xhf.project.chartcorejni.CHfVCFElectronicChart -> xhf.project.chartcorejni.b:
    long swigCPtr -> b
    boolean swigCMemOwn -> a
    void finalize() -> finalize
    void delete() -> a
    void Initialize(java.lang.String,java.lang.String) -> a
    void ManualSingleSelectChart(java.lang.String) -> a
    void ChartZoomout() -> b
    void ChartZoomin() -> c
    void ChartColorMode(int) -> a
    int GetColorMode() -> d
    void ChartDisplayMode(int) -> b
    int GetDisplayMode() -> e
    boolean VoyageManuCenterShow(double,double,double) -> a
    int GetChartOrientMode() -> f
    void FlushOtherLayerDrawBuffer() -> g
    void FlushShowDrawBuffer() -> h
    void FlushScreenLayer() -> i
    int GetLongLatShowStyle() -> j
    void SetIsAutoSwitchChart(boolean) -> a
    boolean GetIsAutoSwitchChart() -> k
    void GeoLongLatToScreenPoint(double,double,xhf.project.chartcorejni.CPoint) -> a
    void ScreenPointToGeoLongLat(xhf.project.chartcorejni.CPoint,xhf.project.chartcorejni.stDPOINT) -> a
    void CalculateDisAndDir(double,double,double,double,xhf.project.chartcorejni.stDPOINT) -> a
    double CalculatePlanePointDis(int,int,int,int) -> a
    void GpsPosCenterCorrect(double,double,double,int,int,int,int,xhf.project.chartcorejni.stDPOINT) -> a
    int GetSeaMeasurePoint1X() -> l
    int GetSeaMeasurePoint1Y() -> m
    int GetSeaMeasurePoint2X() -> n
    int GetSeaMeasurePoint2Y() -> o
    float GetSeaMeasureDir() -> p
    float GetSeaMeasureDis() -> q
    int GetGeoDataSetNums() -> r
    xhf.project.chartcorejni.stVCFGEODATASETDESCR GetGeoDataSetDescr(int) -> c
    void SetMouseOperationMode(xhf.project.chartcorejni.emCHART_OPERATION_MODE) -> a
    xhf.project.chartcorejni.emCHART_OPERATION_MODE GetMouseOperationMode() -> s
    boolean OnTouchDown(float,float) -> a
    boolean OnTouchMove(float,float) -> b
    boolean OnTouchUp(float,float) -> c
    void twoFingerPinchChart(float,float,double) -> a
    void OneFingerDoubleTapZoomin(int,int) -> a
    void DrawVCFChart() -> t
xhf.project.chartcorejni.CHfVCFGeoCanvas -> xhf.project.chartcorejni.c:
    long swigCPtr -> b
    boolean swigCMemOwn -> a
    long getCPtr(xhf.project.chartcorejni.CHfVCFGeoCanvas) -> a
    void finalize() -> finalize
    void delete() -> a
    void SetXYPixelDPM(double,double) -> a
    void SetViewScreenRect(xhf.project.chartcorejni.CRect) -> a
    void SetScreenDpi(float) -> a
xhf.project.chartcorejni.CPoint -> xhf.project.chartcorejni.d:
    long swigCPtr -> b
    boolean swigCMemOwn -> a
    long getCPtr(xhf.project.chartcorejni.CPoint) -> a
    void finalize() -> finalize
    void delete() -> a
    void setX(int) -> a
    int getX() -> b
    void setY(int) -> b
    int getY() -> c
xhf.project.chartcorejni.CRect -> xhf.project.chartcorejni.e:
    long swigCPtr -> b
    long getCPtr(xhf.project.chartcorejni.CRect) -> a
    void finalize() -> finalize
    void delete() -> a
xhf.project.chartcorejni.RECT -> xhf.project.chartcorejni.f:
    long swigCPtr -> b
    boolean swigCMemOwn -> a
    void finalize() -> finalize
    void delete() -> a
    void setLeft(int) -> a
    void setTop(int) -> b
    void setRight(int) -> c
    void setBottom(int) -> d
xhf.project.chartcorejni.elecchartcoreJNI -> xhf.project.chartcorejni.elecchartcoreJNI:
    long new_CPoint__SWIG_0() -> new_CPoint__SWIG_0
    void delete_CPoint(long) -> delete_CPoint
    void CPoint_x_set(long,xhf.project.chartcorejni.CPoint,int) -> CPoint_x_set
    int CPoint_x_get(long,xhf.project.chartcorejni.CPoint) -> CPoint_x_get
    void CPoint_y_set(long,xhf.project.chartcorejni.CPoint,int) -> CPoint_y_set
    int CPoint_y_get(long,xhf.project.chartcorejni.CPoint) -> CPoint_y_get
    void RECT_left_set(long,xhf.project.chartcorejni.RECT,int) -> RECT_left_set
    void RECT_top_set(long,xhf.project.chartcorejni.RECT,int) -> RECT_top_set
    void RECT_right_set(long,xhf.project.chartcorejni.RECT,int) -> RECT_right_set
    void RECT_bottom_set(long,xhf.project.chartcorejni.RECT,int) -> RECT_bottom_set
    void delete_RECT(long) -> delete_RECT
    long new_CRect__SWIG_0() -> new_CRect__SWIG_0
    void delete_CRect(long) -> delete_CRect
    double stDPOINT_x_get(long,xhf.project.chartcorejni.stDPOINT) -> stDPOINT_x_get
    double stDPOINT_y_get(long,xhf.project.chartcorejni.stDPOINT) -> stDPOINT_y_get
    long new_stDPOINT() -> new_stDPOINT
    void delete_stDPOINT(long) -> delete_stDPOINT
    java.lang.String stVCFGEODATASETDESCR_szChartCode_get(long,xhf.project.chartcorejni.stVCFGEODATASETDESCR) -> stVCFGEODATASETDESCR_szChartCode_get
    java.lang.String stVCFGEODATASETDESCR_szChartName_get(long,xhf.project.chartcorejni.stVCFGEODATASETDESCR) -> stVCFGEODATASETDESCR_szChartName_get
    long new_stVCFGEODATASETDESCR() -> new_stVCFGEODATASETDESCR
    void delete_stVCFGEODATASETDESCR(long) -> delete_stVCFGEODATASETDESCR
    long new_CHfVCFGeoCanvas() -> new_CHfVCFGeoCanvas
    void delete_CHfVCFGeoCanvas(long) -> delete_CHfVCFGeoCanvas
    void CHfVCFGeoCanvas_SetXYPixelDPM(long,xhf.project.chartcorejni.CHfVCFGeoCanvas,double,double) -> CHfVCFGeoCanvas_SetXYPixelDPM
    void CHfVCFGeoCanvas_SetViewScreenRect(long,xhf.project.chartcorejni.CHfVCFGeoCanvas,long,xhf.project.chartcorejni.CRect) -> CHfVCFGeoCanvas_SetViewScreenRect
    void CHfVCFGeoCanvas_SetScreenDpi(long,xhf.project.chartcorejni.CHfVCFGeoCanvas,float) -> CHfVCFGeoCanvas_SetScreenDpi
    void CHfVCFGeoCanvas_director_connect(xhf.project.chartcorejni.CHfVCFGeoCanvas,long,boolean,boolean) -> CHfVCFGeoCanvas_director_connect
    int CHART_NODOING_get() -> CHART_NODOING_get
    long new_CHfVCFElectronicChart__SWIG_0() -> new_CHfVCFElectronicChart__SWIG_0
    long new_CHfVCFElectronicChart__SWIG_1(long,xhf.project.chartcorejni.CHfVCFGeoCanvas) -> new_CHfVCFElectronicChart__SWIG_1
    void delete_CHfVCFElectronicChart(long) -> delete_CHfVCFElectronicChart
    void CHfVCFElectronicChart_Initialize(long,xhf.project.chartcorejni.CHfVCFElectronicChart,java.lang.String,java.lang.String) -> CHfVCFElectronicChart_Initialize
    void CHfVCFElectronicChart_ManualSingleSelectChart(long,xhf.project.chartcorejni.CHfVCFElectronicChart,java.lang.String) -> CHfVCFElectronicChart_ManualSingleSelectChart
    void CHfVCFElectronicChart_ChartZoomout(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_ChartZoomout
    void CHfVCFElectronicChart_ChartZoomin(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_ChartZoomin
    void CHfVCFElectronicChart_ChartColorMode(long,xhf.project.chartcorejni.CHfVCFElectronicChart,int) -> CHfVCFElectronicChart_ChartColorMode
    int CHfVCFElectronicChart_GetColorMode(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetColorMode
    void CHfVCFElectronicChart_ChartDisplayMode(long,xhf.project.chartcorejni.CHfVCFElectronicChart,int) -> CHfVCFElectronicChart_ChartDisplayMode
    int CHfVCFElectronicChart_GetDisplayMode(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetDisplayMode
    boolean CHfVCFElectronicChart_VoyageManuCenterShow(long,xhf.project.chartcorejni.CHfVCFElectronicChart,double,double,double) -> CHfVCFElectronicChart_VoyageManuCenterShow
    int CHfVCFElectronicChart_GetChartOrientMode(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetChartOrientMode
    void CHfVCFElectronicChart_FlushOtherLayerDrawBuffer(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_FlushOtherLayerDrawBuffer
    void CHfVCFElectronicChart_FlushShowDrawBuffer(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_FlushShowDrawBuffer
    void CHfVCFElectronicChart_FlushScreenLayer(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_FlushScreenLayer
    int CHfVCFElectronicChart_GetLongLatShowStyle(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetLongLatShowStyle
    void CHfVCFElectronicChart_SetIsAutoSwitchChart(long,xhf.project.chartcorejni.CHfVCFElectronicChart,boolean) -> CHfVCFElectronicChart_SetIsAutoSwitchChart
    boolean CHfVCFElectronicChart_GetIsAutoSwitchChart(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetIsAutoSwitchChart
    void CHfVCFElectronicChart_GeoLongLatToScreenPoint(long,xhf.project.chartcorejni.CHfVCFElectronicChart,double,double,long,xhf.project.chartcorejni.CPoint) -> CHfVCFElectronicChart_GeoLongLatToScreenPoint
    void CHfVCFElectronicChart_ScreenPointToGeoLongLat(long,xhf.project.chartcorejni.CHfVCFElectronicChart,long,xhf.project.chartcorejni.CPoint,long,xhf.project.chartcorejni.stDPOINT) -> CHfVCFElectronicChart_ScreenPointToGeoLongLat
    void CHfVCFElectronicChart_CalculateDisAndDir(long,xhf.project.chartcorejni.CHfVCFElectronicChart,double,double,double,double,long,xhf.project.chartcorejni.stDPOINT) -> CHfVCFElectronicChart_CalculateDisAndDir
    double CHfVCFElectronicChart_CalculatePlanePointDis__SWIG_1(long,xhf.project.chartcorejni.CHfVCFElectronicChart,int,int,int,int) -> CHfVCFElectronicChart_CalculatePlanePointDis__SWIG_1
    void CHfVCFElectronicChart_GpsPosCenterCorrect(long,xhf.project.chartcorejni.CHfVCFElectronicChart,double,double,double,int,int,int,int,long,xhf.project.chartcorejni.stDPOINT) -> CHfVCFElectronicChart_GpsPosCenterCorrect
    int CHfVCFElectronicChart_GetSeaMeasurePoint1X(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetSeaMeasurePoint1X
    int CHfVCFElectronicChart_GetSeaMeasurePoint1Y(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetSeaMeasurePoint1Y
    int CHfVCFElectronicChart_GetSeaMeasurePoint2X(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetSeaMeasurePoint2X
    int CHfVCFElectronicChart_GetSeaMeasurePoint2Y(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetSeaMeasurePoint2Y
    float CHfVCFElectronicChart_GetSeaMeasureDir(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetSeaMeasureDir
    float CHfVCFElectronicChart_GetSeaMeasureDis(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetSeaMeasureDis
    int CHfVCFElectronicChart_GetGeoDataSetNums(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetGeoDataSetNums
    long CHfVCFElectronicChart_GetGeoDataSetDescr__SWIG_0(long,xhf.project.chartcorejni.CHfVCFElectronicChart,int) -> CHfVCFElectronicChart_GetGeoDataSetDescr__SWIG_0
    void CHfVCFElectronicChart_SetMouseOperationMode(long,xhf.project.chartcorejni.CHfVCFElectronicChart,int) -> CHfVCFElectronicChart_SetMouseOperationMode
    int CHfVCFElectronicChart_GetMouseOperationMode(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_GetMouseOperationMode
    boolean CHfVCFElectronicChart_OnTouchDown(long,xhf.project.chartcorejni.CHfVCFElectronicChart,float,float) -> CHfVCFElectronicChart_OnTouchDown
    boolean CHfVCFElectronicChart_OnTouchMove(long,xhf.project.chartcorejni.CHfVCFElectronicChart,float,float) -> CHfVCFElectronicChart_OnTouchMove
    boolean CHfVCFElectronicChart_OnTouchUp(long,xhf.project.chartcorejni.CHfVCFElectronicChart,float,float) -> CHfVCFElectronicChart_OnTouchUp
    void CHfVCFElectronicChart_twoFingerPinchChart__SWIG_1(long,xhf.project.chartcorejni.CHfVCFElectronicChart,float,float,double) -> CHfVCFElectronicChart_twoFingerPinchChart__SWIG_1
    void CHfVCFElectronicChart_OneFingerDoubleTapZoomin(long,xhf.project.chartcorejni.CHfVCFElectronicChart,int,int) -> CHfVCFElectronicChart_OneFingerDoubleTapZoomin
    void CHfVCFElectronicChart_DrawVCFChart(long,xhf.project.chartcorejni.CHfVCFElectronicChart) -> CHfVCFElectronicChart_DrawVCFChart
    long new_CHfSensorDataFlow() -> new_CHfSensorDataFlow
    void delete_CHfSensorDataFlow(long) -> delete_CHfSensorDataFlow
    void CHfSensorDataFlow_InitSensorDataFlow(long,xhf.project.chartcorejni.CHfSensorDataFlow,int) -> CHfSensorDataFlow_InitSensorDataFlow
    void CHfSensorDataFlow_SensorRecevDataFlowMsg(long,xhf.project.chartcorejni.CHfSensorDataFlow,java.lang.String,int) -> CHfSensorDataFlow_SensorRecevDataFlowMsg
    void CHfSensorDataFlow_director_connect(xhf.project.chartcorejni.CHfSensorDataFlow,long,boolean,boolean) -> CHfSensorDataFlow_director_connect
    long CRect_SWIGUpcast(long) -> CRect_SWIGUpcast
    void swig_module_init() -> swig_module_init
xhf.project.chartcorejni.emCHART_OPERATION_MODE -> xhf.project.chartcorejni.g:
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHART_NODOING -> a
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHART_ZOOMOUT -> b
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHART_ZOOMIN -> c
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHART_MPAN -> d
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHART_CPAN -> e
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHART_OPENWZOOMOUT -> f
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHART_HHCL -> g
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHART_PICK -> h
    xhf.project.chartcorejni.emCHART_OPERATION_MODE CHOPM_NUMS -> i
    xhf.project.chartcorejni.emCHART_OPERATION_MODE[] swigValues -> j
    int swigNext -> k
    int swigValue -> l
    java.lang.String swigName -> m
    int swigValue() -> a
    java.lang.String toString() -> toString
    xhf.project.chartcorejni.emCHART_OPERATION_MODE swigToEnum(int) -> a
xhf.project.chartcorejni.stDPOINT -> xhf.project.chartcorejni.h:
    long swigCPtr -> b
    boolean swigCMemOwn -> a
    long getCPtr(xhf.project.chartcorejni.stDPOINT) -> a
    void finalize() -> finalize
    void delete() -> a
    double getX() -> b
    double getY() -> c
xhf.project.chartcorejni.stVCFGEODATASETDESCR -> xhf.project.chartcorejni.i:
    long swigCPtr -> b
    boolean swigCMemOwn -> a
    void finalize() -> finalize
    void delete() -> a
    java.lang.String getSzChartCode() -> b
    java.lang.String getSzChartName() -> c
xhf.project.datamanage.CPilotDataManage -> xhf.project.a.a:
    android.content.Context m_context -> a
    java.lang.String m_strDatabaseName -> b
    java.lang.String m_strShipPosTable -> c
    java.lang.String m_strShipStaticDataTable -> d
    java.lang.String m_strAisDynaTable -> e
    java.lang.String m_strAisStaticTabel -> f
    android.content.ContentValues contentValues -> g
    void SaveShipParameter(xhf.project.datamanage.CShipStaticData) -> a
    boolean LoadShipParameter(xhf.project.datamanage.CShipStaticData) -> b
xhf.project.datamanage.CShipStaticData -> xhf.project.a.b:
    java.lang.String szName -> a
    java.lang.String szCallNo -> b
    int nTxHead -> c
    int nTxTail -> d
    int nTxLeft -> e
    int nTxRight -> f
    xhf.project.utilitytool.COleDateTime oleSettime -> g
    void init() -> a
    java.lang.String GetName() -> b
    void SetName(java.lang.String) -> a
    java.lang.String GetCallNo() -> c
    void SetCallNo(java.lang.String) -> b
    int GetTxHead() -> d
    void SetTxHead(int) -> a
    int GetTxTail() -> e
    void SetTxTail(int) -> b
    int GetTxLeft() -> f
    void SetTxLeft(int) -> c
    void SetTxRight(int) -> d
    int GetTxRight() -> g
xhf.project.dynamictarget.CAisTarget -> xhf.project.b.a:
    long a -> a
    xhf.project.utilitytool.COleDateTime b -> b
    int c -> c
    double d -> d
    double e -> e
    double f -> f
    double g -> g
    double h -> h
    double i -> i
    float j -> j
    byte k -> k
    long l -> l
    java.lang.String m -> m
    java.lang.String n -> n
    int o -> o
    int p -> p
    int q -> q
    int r -> r
    int s -> s
    int t -> t
    xhf.project.utilitytool.COleDateTime u -> u
    java.lang.String v -> v
    float w -> w
    byte x -> x
    int y -> y
    double z -> z
    double A -> A
    double B -> B
    double C -> C
    boolean D -> D
    boolean E -> E
    boolean F -> F
    int G -> G
    boolean H -> H
    int I -> I
    java.lang.String GetShipName() -> a
    java.lang.String GetShipCallNo() -> b
    int LoseTimeoutCounterAdd() -> c
    void SetIsSelect(boolean) -> a
xhf.project.dynamictarget.CDynamicTargetControl -> xhf.project.b.b:
    xhf.project.dynamictarget.CPilotShip a -> b
    java.util.List b -> c
    java.lang.String c -> d
    int d -> e
    int e -> f
    int f -> g
    boolean g -> h
    boolean h -> i
    boolean i -> j
    boolean j -> k
    double k -> l
    double l -> m
    int m -> n
    int g_nSystemRunMode -> a
    int SetPilotShipParamterInfo(java.lang.String,java.lang.String,int,int,int,int) -> a
    java.lang.String GetPilotShipName() -> a
    java.lang.String GetPilotShipCallNo() -> b
    int GetPilotShipTxHead() -> c
    int GetPilotShipTxLeft() -> d
    int GetPilotShipWidth() -> e
    int GetPilotShipLength() -> f
    xhf.project.dynamictarget.CPilotShip GetPilotShip() -> g
    int GetAisTargetNums() -> h
    xhf.project.dynamictarget.CAisTarget GetAisTarget(int) -> a
    xhf.project.dynamictarget.CAisTarget GetAisTargetByTargetId(java.lang.String) -> a
    void SelectAisTarget(java.lang.String) -> b
    void xhfTargetTimeoutMonitor() -> i
    boolean ManualPilotShipCenterShow() -> j
    void SetIsPilotShipChanage(boolean) -> a
    boolean GetIsPilotShipChanage() -> k
    void SetIsAisTargetChanage(boolean) -> b
    boolean GetIsAisTargetChanage() -> l
xhf.project.dynamictarget.CPilotShip -> xhf.project.b.c:
    int a -> a
    double b -> b
    double c -> c
    double d -> d
    double e -> e
    xhf.project.utilitytool.COleDateTime f -> f
    byte g -> g
    byte h -> h
    byte i -> i
    java.lang.String j -> j
    java.lang.String k -> k
    int l -> l
    int m -> m
    int n -> n
    int o -> o
    double p -> p
    double q -> q
    double r -> r
    double s -> s
    xhf.project.utilitytool.COleDateTime t -> t
    java.lang.String u -> u
    java.lang.String v -> v
    int w -> w
    int x -> x
    int y -> y
    int z -> z
    double A -> A
    double B -> B
    java.lang.String C -> C
    boolean D -> D
    int E -> E
    long F -> F
    int G -> G
    boolean H -> H
    int I -> I
    boolean J -> J
    int K -> K
    int L -> L
    int M -> M
    java.lang.String N -> N
    double O -> O
    int P -> P
    double Q -> Q
    double R -> R
    double S -> S
    double T -> T
    int U -> U
    boolean V -> V
    boolean W -> W
    boolean X -> X
    boolean Y -> Y
    boolean Z -> Z
    int aa -> aa
    boolean ab -> ab
    boolean ac -> ac
    boolean ad -> ad
    int ae -> ae
    java.util.List af -> af
    boolean ag -> ag
    boolean ah -> ah
    boolean ai -> ai
    int aj -> aj
    int ak -> ak
    boolean al -> al
    boolean am -> am
    boolean an -> an
    int ao -> ao
    void SetOwnShipStaticParamter(java.lang.String,java.lang.String,int,int,int,int) -> a
    xhf.project.utilitytool.COleDateTime GetGpsPosTime() -> a
    java.lang.String GetOwnShipName() -> b
    java.lang.String GetOwnShipCallNo() -> c
    int GetOwnShipTxHead() -> d
    int GetOwnShipTxTail() -> e
    int GetOwnShipTxLeft() -> f
    int GetOwnShipTxRight() -> g
    int GetGpsPosStarNum() -> h
    byte GetGpsPosDGPS() -> i
    byte GetGpsPosPos() -> j
    double GetShipPosLong() -> k
    double GetShipPosLat() -> l
    double GetShipPosCourse() -> m
    double GetShipPosSpeed() -> n
    double GetHead() -> o
    double GetUseHead() -> p
    int GetTxHead() -> q
    int GetTxTail() -> r
    int GetTxLeft() -> s
    int GetTxRight() -> t
    int GetPosType() -> u
    boolean ShipPositionIsAvalid() -> v
    void SetRouteName(java.lang.String) -> a
    void SetXTEDis(double) -> a
    void SetXTEDir(int) -> a
    void SetApprWPDis(double) -> b
    void SetApprWPDir(double) -> c
    void SetPlanCourse(double) -> d
    void SetNextLegDis(double) -> e
    void SetCurrWayPointNum(int) -> b
    void SetIsPassWayPoint(boolean) -> a
    void SetIsFinishRoute(boolean) -> b
    double GetXTEDis() -> w
    int GetXTEDir() -> x
    void SetIsXTEAlarm(boolean) -> c
    void SetIsXTEAlmLog(boolean) -> d
    void SetIsXTEAlmAck(boolean) -> e
    void XTEAlarmTimeoutRst() -> y
    void SetIsApprAlarm(boolean) -> f
    void SetIsApprAlmLog(boolean) -> g
    void SetIsApprAlmAck(boolean) -> h
    void ApprAlarmTimeoutRst() -> z
    int LoseTimeoutCounterAdd() -> A
    void SetIsLoseAlarm(boolean) -> i
    void SetIsLoseAlmLog(boolean) -> j
    void SetIsLoseAlmAck(boolean) -> k
    boolean GetIsLoseAlarm() -> B
xhf.project.dynamictarget.CTarget -> xhf.project.b.d:
    java.lang.String a -> a
    int b -> b
    int c -> c
    java.lang.String GetTargetId() -> C
    void SetTargetState(int) -> c
    int GetTargetState() -> D
xhf.project.routemanage.CPlanRoute -> xhf.project.c.a:
    java.lang.String m_strRouteName -> a
    java.lang.String m_strRouteDescr -> b
    java.lang.String m_strRouteUseing -> c
    java.util.List m_lWayPointList -> i
    boolean m_bReverse -> d
    boolean m_bLegDirPlot -> e
    boolean m_bLegDisPlot -> f
    boolean m_bRouteNamePlot -> g
    boolean m_bWayPointNumPlot -> h
    void SetRouteName(java.lang.String) -> a
    java.lang.String GetRouteName() -> a
    void SetRouteDescr(java.lang.String) -> b
    void AddWayPoint(xhf.project.routemanage.CWayPoint) -> a
    boolean InsertWayPoint(xhf.project.routemanage.CWayPoint,int) -> a
    boolean DeleteWayPoint(xhf.project.routemanage.CWayPoint) -> b
    boolean UpdateWayPoint(xhf.project.routemanage.CWayPoint) -> c
    xhf.project.routemanage.CWayPoint GetWayPoint(int) -> a
    int Save() -> b
    int Import(java.lang.String) -> c
    void Destroy() -> c
    int GetWayPointNums() -> d
    xhf.project.routemanage.CWayPoint getWayPoint(int) -> b
    xhf.project.routemanage.CWayPoint GetTailWayPoint() -> e
    xhf.project.routemanage.CWayPoint GetHeadWayPoint() -> f
    void SetRouteUseing(java.lang.String) -> d
xhf.project.routemanage.CPlanRouteManage -> xhf.project.c.b:
    java.lang.String m_strRouteLibName -> a
    xhf.project.routemanage.CPlanRoute m_oEditRoute -> b
    int m_nRouteEditOpState -> c
    xhf.project.routemanage.CWayPoint m_oCurrWP -> d
    xhf.project.routemanage.CWayPoint m_oPrevWP -> e
    xhf.project.routemanage.CWayPoint m_oNextWP -> f
    xhf.project.chartcorejni.CPoint m_ptPrevPoint -> g
    xhf.project.chartcorejni.CPoint m_ptNextPoint -> h
    xhf.project.chartcorejni.CPoint m_ptCurrPoint -> i
    xhf.project.chartcorejni.CPoint m_ptFirstPoint -> j
    xhf.project.chartcorejni.CPoint m_ptSecondPoint -> k
    xhf.project.chartcorejni.CPoint m_tmpPoint -> l
    boolean m_bIsUpdateOp -> m
    boolean m_bRouteEnum -> n
    xhf.project.routemanage.CPlanRoute m_oPlanRoute -> o
    xhf.project.routemanage.CWayPoint m_omPlanWP -> p
    xhf.project.routemanage.CWayPoint m_omPrevWP -> q
    double m_fXTECheckValue -> r
    double m_fAWPCheckValue -> s
    int m_nRouteLineWidth -> t
    boolean m_bDirPlot -> u
    boolean m_bDisPlot -> v
    boolean m_bNamePlot -> w
    xhf.project.chartcorejni.stDPOINT m_stShipCenPoint -> x
    xhf.project.chartcorejni.stDPOINT m_stDirDisPoint -> y
    java.lang.String m_strSelectRouteNme -> z
    int m_nSelectRouteInx -> A
    int SavePlanRoute(java.lang.String,java.lang.String,java.lang.String) -> a
    int OpenPlanRoute(java.lang.String) -> a
    void ClearEditRoute() -> a
    void DestroyEditRoute() -> b
    boolean DeleteRouteFile(java.lang.String) -> b
    int OnLButtonDown(android.graphics.Point) -> a
    int OnLButtonUp(android.graphics.Point) -> b
    int OnMouseMove(android.graphics.Point) -> c
    void SetRouteEditOpState(int) -> a
    int GetRouteEditOpState() -> c
    int SelectRouteWP(android.graphics.Point,xhf.project.routemanage.CWayPoint,xhf.project.routemanage.CWayPoint,xhf.project.routemanage.CWayPoint) -> a
    boolean SelectRouteLeg(android.graphics.Point,xhf.project.routemanage.CWayPoint,xhf.project.routemanage.CWayPoint) -> a
    xhf.project.routemanage.CPlanRoute GetEditPlanRoute() -> d
    xhf.project.chartcorejni.CPoint GetPtPrevPoint() -> e
    xhf.project.chartcorejni.CPoint GetPtCurrPoint() -> f
    xhf.project.chartcorejni.CPoint GetPtNextPoint() -> g
    boolean GetIsUpdateOp() -> h
    boolean PlanRouteMonTransfer(java.lang.String) -> c
    void PlanRouteMonClose() -> i
    void PlanRouteMonCalculate() -> j
xhf.project.routemanage.CWayPoint -> xhf.project.c.c:
    int m_nNum -> a
    double m_fLong -> b
    double m_fLat -> c
    double m_fLegDir -> d
    double m_fLegDis -> e
    java.lang.String m_szETA -> f
    boolean IsValid() -> a
    void Destroy() -> b
xhf.project.sensorctl.BluetoothChatService -> xhf.project.sensorctl.a:
    java.util.UUID MY_UUID -> a
    android.bluetooth.BluetoothAdapter mAdapter -> b
    android.os.Handler mHandler -> c
    xhf.project.sensorctl.BluetoothChatService$AcceptThread mAcceptThread -> d
    xhf.project.sensorctl.BluetoothChatService$ConnectThread mConnectThread -> e
    xhf.project.sensorctl.BluetoothChatService$ConnectedThread mConnectedThread -> f
    int mState -> g
    byte[] m_rcvBuffer -> h
    int m_rcvLength -> i
    void setState(int) -> a
    int getState() -> a
    void start() -> b
    void connect(android.bluetooth.BluetoothDevice) -> a
    void connected(android.bluetooth.BluetoothSocket,android.bluetooth.BluetoothDevice) -> a
    void stop() -> c
    void connectionFailed() -> e
    void connectionLost() -> f
    android.bluetooth.BluetoothAdapter access$0(xhf.project.sensorctl.BluetoothChatService) -> a
    java.util.UUID access$1() -> d
    int access$2(xhf.project.sensorctl.BluetoothChatService) -> b
    void access$3(xhf.project.sensorctl.BluetoothChatService) -> c
    void access$4(xhf.project.sensorctl.BluetoothChatService,xhf.project.sensorctl.BluetoothChatService$ConnectThread) -> a
    byte[] access$5(xhf.project.sensorctl.BluetoothChatService) -> d
    void access$6(xhf.project.sensorctl.BluetoothChatService,int) -> a
    android.os.Handler access$7(xhf.project.sensorctl.BluetoothChatService) -> e
    int access$8(xhf.project.sensorctl.BluetoothChatService) -> f
    void access$9(xhf.project.sensorctl.BluetoothChatService) -> g
xhf.project.sensorctl.BluetoothChatService$AcceptThread -> xhf.project.sensorctl.b:
    android.bluetooth.BluetoothServerSocket mmServerSocket -> b
    xhf.project.sensorctl.BluetoothChatService this$0 -> a
    void run() -> run
    void cancel() -> a
xhf.project.sensorctl.BluetoothChatService$ConnectThread -> xhf.project.sensorctl.c:
    android.bluetooth.BluetoothSocket mmSocket -> b
    android.bluetooth.BluetoothDevice mmDevice -> c
    xhf.project.sensorctl.BluetoothChatService this$0 -> a
    void run() -> run
    void cancel() -> a
xhf.project.sensorctl.BluetoothChatService$ConnectedThread -> xhf.project.sensorctl.d:
    android.bluetooth.BluetoothSocket mmSocket -> b
    java.io.InputStream mmInStream -> c
    java.io.OutputStream mmOutStream -> d
    xhf.project.sensorctl.BluetoothChatService this$0 -> a
    void run() -> run
    void cancel() -> a
xhf.project.sensorctl.CPilotSensorControl -> xhf.project.sensorctl.e:
    xhf.project.sensorctl.CSensorDataFlowParase m_sensorDataFlow -> b
    boolean m_bGpsFaultAlarm -> c
    int m_nConnStateTout -> d
    int m_nGpsConnToutSet -> e
    java.net.InetAddress m_ServerAddress -> f
    java.net.Socket m_TcpSocket -> g
    xhf.project.sensorctl.CSocketCommsThread m_SocketCommsThread -> h
    xhf.project.sensorctl.CSockCommConfig m_sockCommConfig -> i
    android.app.Activity m_parentActivity -> j
    android.bluetooth.BluetoothAdapter m_mBluetoothAdapter -> k
    xhf.project.sensorctl.BluetoothChatService m_mChatService -> l
    java.lang.String m_strBlueaddress -> m
    java.lang.String m_strConnectedDeviceName -> n
    java.lang.String m_strRcvBltData -> o
    android.os.Handler tcpSockHandler -> a
    android.os.Handler mBluetoohHandler -> p
    void Initialize() -> a
    void StartupSocketCommThread() -> b
    void CloseSocketCommThread() -> c
    void hfSensorStateRTimeMonitor() -> d
    void SetSocketConfig(xhf.project.sensorctl.CSockCommConfig) -> a
    xhf.project.sensorctl.CSockCommConfig GetSocketConfig() -> e
    void SaveSocketConfigToFile() -> m
    void ReadSocketConfigFromFile() -> f
    void SaveBluetoothConfig() -> g
    void ReadBluetoothConfig() -> h
    boolean GetGpsFaultAlarm() -> i
    boolean StartupBluetooth(android.app.Activity) -> a
    void bluetoothResume() -> j
    void bluetoothStop() -> k
    boolean ensureDiscoverable(android.app.Activity) -> b
    void requestConntectDevice(java.lang.String) -> a
    void requestEnableBluetooth(android.app.Activity) -> c
    xhf.project.sensorctl.CSensorDataFlowParase access$0() -> l
    void access$1(int) -> a
    java.lang.String access$2(xhf.project.sensorctl.CPilotSensorControl) -> a
    void access$3(xhf.project.sensorctl.CPilotSensorControl,java.lang.String) -> a
    java.net.InetAddress access$4(xhf.project.sensorctl.CPilotSensorControl) -> b
    xhf.project.sensorctl.CSockCommConfig access$5(xhf.project.sensorctl.CPilotSensorControl) -> c
    void access$6(xhf.project.sensorctl.CPilotSensorControl,java.net.Socket) -> a
    java.net.Socket access$7(xhf.project.sensorctl.CPilotSensorControl) -> d
    void access$8(xhf.project.sensorctl.CPilotSensorControl,xhf.project.sensorctl.CSocketCommsThread) -> a
    xhf.project.sensorctl.CSocketCommsThread access$9(xhf.project.sensorctl.CPilotSensorControl) -> e
xhf.project.sensorctl.CPilotSensorControl$1 -> xhf.project.sensorctl.f:
    void handleMessage(android.os.Message) -> handleMessage
xhf.project.sensorctl.CPilotSensorControl$2 -> xhf.project.sensorctl.g:
    xhf.project.sensorctl.CPilotSensorControl this$0 -> a
    void handleMessage(android.os.Message) -> handleMessage
xhf.project.sensorctl.CPilotSensorControl$CloseSocketTask -> xhf.project.sensorctl.h:
    xhf.project.sensorctl.CPilotSensorControl this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
xhf.project.sensorctl.CPilotSensorControl$CreateSocketCommThreadTask -> xhf.project.sensorctl.i:
    xhf.project.sensorctl.CPilotSensorControl this$0 -> a
    java.lang.Void doInBackground(java.lang.Void[]) -> a
    java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
xhf.project.sensorctl.CSensorDataFlowParase -> xhf.project.sensorctl.j:
xhf.project.sensorctl.CSockCommConfig -> xhf.project.sensorctl.k:
    java.lang.String m_strServerIP -> a
    int m_nServerPort -> b
    boolean m_nActive -> c
    int m_nLocalPort -> d
    int m_nProtocol -> e
xhf.project.sensorctl.CSocketCommsThread -> xhf.project.sensorctl.l:
    java.net.Socket m_TcpSocket -> a
    java.io.InputStream m_InputStream -> b
    java.io.OutputStream m_OutputStream -> c
    byte[] m_rcvBuffers -> d
    int m_nrcvLength -> e
    void run() -> run
xhf.project.sensorctl.DeviceListActivity -> xhf.project.sensorctl.DeviceListActivity:
    java.lang.String EXTRA_DEVICE_ADDRESS -> a
    android.bluetooth.BluetoothAdapter mBtAdapter -> b
    android.widget.ArrayAdapter mPairedDevicesArrayAdapter -> c
    android.widget.ArrayAdapter mNewDevicesArrayAdapter -> d
    android.widget.AdapterView$OnItemClickListener mDeviceClickListener -> e
    android.content.BroadcastReceiver mReceiver -> f
    void onCreate(android.os.Bundle) -> onCreate
    void onDestroy() -> onDestroy
    void doDiscovery() -> a
    android.bluetooth.BluetoothAdapter access$0(xhf.project.sensorctl.DeviceListActivity) -> a
    android.widget.ArrayAdapter access$1(xhf.project.sensorctl.DeviceListActivity) -> b
    void access$2(xhf.project.sensorctl.DeviceListActivity) -> c
xhf.project.sensorctl.DeviceListActivity$1 -> xhf.project.sensorctl.m:
    xhf.project.sensorctl.DeviceListActivity this$0 -> a
    void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
xhf.project.sensorctl.DeviceListActivity$2 -> xhf.project.sensorctl.n:
    xhf.project.sensorctl.DeviceListActivity this$0 -> a
    void onReceive(android.content.Context,android.content.Intent) -> onReceive
xhf.project.sensorctl.DeviceListActivity$3 -> xhf.project.sensorctl.o:
    xhf.project.sensorctl.DeviceListActivity this$0 -> a
    void onClick(android.view.View) -> onClick
xhf.project.utilitytool.CLatLongDM -> xhf.project.d.a:
    int m_nDegree -> a
    double m_fMinute -> b
xhf.project.utilitytool.CLatLongDMS -> xhf.project.d.b:
    int m_nDegree -> a
    int m_nMinute -> b
    double m_fSecond -> c
xhf.project.utilitytool.COleDateTime -> xhf.project.d.c:
    int m_nYear -> a
    int m_nMonth -> b
    int m_nDay -> c
    int m_nHour -> d
    int m_nMinute -> e
    int m_nSecond -> f
    int GetYear() -> a
    int GetMonth() -> b
    int GetDay() -> c
    int GetHour() -> d
    int GetMinute() -> e
    int GetSecond() -> f
    java.lang.String GetTimeString() -> g
    java.lang.String GetTimeHHMMSSString() -> h
    xhf.project.utilitytool.COleDateTime GetCurrentTime() -> i
xhf.project.utilitytool.CUtilityTool -> xhf.project.d.d:
    long RGBToLong(int,int,int) -> a
    void GeoLongLatToDMS(double,xhf.project.utilitytool.CLatLongDMS) -> a
    void GeoLatLongToDM(double,xhf.project.utilitytool.CLatLongDM) -> a
    boolean DeleteFile(java.lang.String) -> a
